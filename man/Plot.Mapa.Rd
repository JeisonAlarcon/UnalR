% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Plot_Mapa.R
\name{Plot.Mapa}
\alias{Plot.Mapa}
\title{Cree un widget para visualizar datos geográficos en un mapa interactivo usando
el paquete \code{Leaflet}}
\usage{
Plot.Mapa(
  datos,
  tipo = c("Deptos", "SiNoMpios", "Mpios", "DeptoMpio"),
  titulo,
  baldosas,
  cortes,
  colores,
  colSedes,
  opacidad = 0.7,
  colBorde,
  compacto = TRUE,
  textSize = 10,
  limpio = FALSE
)
}
\arguments{
\item{datos}{Un data frame con dos columnas primordiales (\emph{que usará internamente la función})
\code{Code_Dept} y \code{Code_Mun}. No objetos espaciales o polígonos.}

\item{tipo}{Cadena de caracteres que indica el tipo de mapa a graficar. Los valores
permitidos son "Deptos", "SiNoMpios", "Mpios" y "DeptoMpio" (valor predeterminado).
Se emparejará parcialmente.}

\item{titulo}{Cadena de caracteres indicando la segregación que presenta el mapa
y el periodo al que hace referencia éste, separados por un espacio, por ejemplo,
"Admitidos 2021-I".}

\item{baldosas}{Vector de caracteres indicando los mapas base con los que se
realizará el mapa, sean los popularizados por Google Maps o por terceros. Los
valores aceptados son los admitidos por la función \link[leaflet:addProviderTiles]{addProviderTiles()},
asimismo los valores por defecto son \code{c("CartoDB.Positron", "Esri.WorldStreetMap", "Esri.NatGeoWorldMap")},
algunos otros valores pueden ser:
\itemize{
\item "Stamen.Toner"
\item "Stamen.TonerLite"
\item "Stamen.TonerLines"
\item "Stamen.Watercolor"
\item "Stamen.TonerHybrid"
\item "Esri.DeLorme"
\item "Esri.WorldTerrain"
\item "Esri.WorldShadedRelief"
\item "Esri.WorldPhysical"
\item "Esri.OceanBasemap"
\item "Esri.WorldGrayCanvas"
}

La lista completa la puede consultar \href{http://leaflet-extras.github.io/leaflet-providers/preview/index.html}{aquí}}

\item{cortes}{Vector numérico indicando los cortes con los cuales se crearán los
intervalos. No aplica para el tipo de mapa "SiNoMpios", pues este es binario.
Para el tipo de mapa "DeptoMpio" se debe pasar una lista de la siguiente manera
\code{list(Deptos = c(), Mpios = c())}, pues requiere dos cortes, uno para departamentos
y otro para municipios.}

\item{colores}{Vector de caracteres indicando los colores para cada uno de los
intervalos con los que cuenta el mapa. Si no se introduce algún vector se usará
una paleta predetermina dependiendo del tipo de mapa.}

\item{colSedes}{Vector de caracteres (\emph{de longitud 9}) indicando los colores del
icono de ubicación de las distintas sedes de la Universidad Nacional de Colombia.
Los colores permitidos son los que acepta la función \link[leaflet:makeAwesomeIcon]{makeAwesomeIcon()},
es decir, "red", "darkred", "lightred", "orange", "beige", "green", "darkgreen",
"lightgreen", "blue", "darkblue", "lightblue", "purple", "darkpurple", "pink",
"cadetblue", "white", "gray", "lightgray", "black".}

\item{opacidad}{Un número entre \eqn{[0, 1]} que indica la opacidad de las capas.}

\item{colBorde}{Cadena de caracteres indicando el color del borde de los polígonos
al momento de pasar el cursos sobre él.}

\item{compacto}{Si es \code{TRUE} (valor predeterminado) el control de capas se
representará como un icono que se expande cuando se coloca el cursor sobre él.
Ajústelo a \code{FALSE} para que el control de capas siempre aparezca en su estado
expandido.}

\item{textSize}{Valor numérico que indica el tamaño del texto de las etiquetas
de los municipios. El valor para los departamentos será \eqn{+2px}.}

\item{limpio}{Si es \code{FALSE} (valor predeterminado) se mostrará el MiniMapa, la
barra de escala y los botones para ver en pantalla completa, retornar zoom y
localización. Ajústelo a \code{TRUE} si desea omitir dichas herramientas adicionales
al mapa.}
}
\value{
Retorna el mapa (objeto widget de HTML) creado mediante \code{Leaflet}, el cual pertenece
a la clase "leaflet" y "htmlwidget".
}
\description{
Esta función está planeada para facilitar la creación de mapas interactivos
compatible con plataformas móviles y de escritorio, además de estar diseñada
pensando en la simplicidad y el rendimiento. Esta utilidad produce mapas que
tienen controles para hacer zoom, desplazarse y alternar capas y puntos entre
mostrar y ocultar. Igualmente permite incrustar mapas en webs, documentos
\verb{R Markdown} y aplicaciones \code{Shiny}. Todo lo anterior basado enteramente en la
librería \code{Leaflet}, la cual es la biblioteca \code{JavaScript} de código abierto más
popular para mapas interactivos.
}
\details{
El data frame introducido en el argumento datos debe contener atributos atómicos,
es decir, que cada fila debe corresponder a un individuo. Además, se usará solamente
dos variables de éste, correspondiente a los códigos \code{DIVIPOLA} del departamento
(\strong{Code_Dept}) y el municipio (\strong{Code_Mpio}).
}
\examples{
if (require("dplyr")) {
  Graduados <- Graduados \%>\%
    select(Code_Dept    = COD_DEP_NAC,
           Code_Mun     = COD_CIU_NAC,
           Departamento = DEP_NAC,
           Municipio    = CIU_NAC,
           Longitud     = LON_CIU_NAC,
           Latitud      = LAT_CIU_NAC) \%>\%
    filter(!is.na(Departamento))
}

Plot.Mapa(datos    = Graduados,
          tipo     = "Deptos",
          titulo   = "Graduados 2020-II",
          baldosas = c("Stamen.Toner", "Stamen.TonerLite", "Stamen.TonerLines", "Esri.DeLorme",
                       "Esri.WorldTerrain", "Esri.WorldShadedRelief", "Esri.WorldPhysical",
                       "Esri.OceanBasemap", "Esri.WorldGrayCanvas"),
          colSedes = rep("green", 9),
          compacto = FALSE,
          textSize = 16,
          limpio   = TRUE
          )

Plot.Mapa(datos = Graduados, tipo = "SiNoMpios", titulo = "Graduados 2020-II",
          opacidad = 0.4, colores = c("#FF0071", "#00BCB5")
          )

Plot.Mapa(datos   = Graduados,
          tipo    = "DeptoMpio",
          titulo   = "Graduados 2020-II",
          cortes  = list(Deptos = c(0, 10, 20, 50, 500, Inf),
                         Mpios  = c(0, 1, 5, 10, 100, Inf)),
          colores = list(Deptos = c("#6812F2", "#5769F6", "#F6ED0D", "#EE6115", "#EC2525"),
                         Mpios  = c("#E7F15D", "#ACBD37", "#E15E32", "#A82743", "#5C323E"))
          )

}
