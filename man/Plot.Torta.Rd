% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Plot_Torta.R
\name{Plot.Torta}
\alias{Plot.Torta}
\title{Cree un gráfico circular/torta/pie dinámico y flexible con dos diferentes paquetes}
\usage{
Plot.Torta(
  datos,
  categoria,
  ano,
  periodo,
  colores,
  titulo = "",
  addPeriodo = TRUE,
  libreria = c("highcharter", "plotly"),
  estilo = NULL
)
}
\arguments{
\item{datos}{Un data frame.}

\item{categoria}{Una variable categórica dentro del data frame ingresado en \code{datos}.}

\item{ano}{Valor numérico que indica el año de interés para realizar el gráfico.
Si solo se introduce el año, pero no el período, se calculará independiente del
semestre (\emph{tomando ambos}).}

\item{periodo}{Valor numérico que indica el período o semestre de interés para
realizar el gráfico. Si solo se introduce el período, pero no el año, se calculará
en base a todos los años disponibles en \code{datos}.}

\item{colores}{Igual uso que en \code{\link[=Plot.Series]{Plot.Series()}}}

\item{titulo}{Igual uso que en \code{\link[=Plot.Series]{Plot.Series()}}}

\item{addPeriodo}{Si es \code{TRUE} (valor predeterminado ssi se introduce los argumentos
\code{ano} y \code{periodo} simultáneamente) concatenará al título introducido una cadena
de caracteres indicando entre paréntesis el "año-periodo" insertado.}

\item{libreria}{Igual uso que en \code{\link[=Plot.Series]{Plot.Series()}}}

\item{estilo}{Lista compuesta por varios parámetros, los cuales van a ser usados
de acuerdo con la librería específica para graficar la torta y cuyo objetivo es
personalizar pequeños detalles de ésta.
\itemize{
\item \code{LegendTitle}, \code{hc.Tema}, \code{hc.Credits} y \code{ply.Credits}: Igual uso que en \code{\link[=Plot.Series]{Plot.Series()}}
\item \code{ply.Leyenda}: Por defecto la gráfica muestra la legenda fuera del grafico de
pie, si se introduce la cadena de texto "inside" se resumirá toda la información
dentro del pie.
}}
}
\value{
Retorna el diagrama circular (\emph{objeto widget de HTML}) creado. La clase del objeto
retornado será un "htmlwidget" y dependiendo de la librería usada pertenecerá
adicionalmente a la clase "highchart" o "plotly".
}
\description{
Esta función permite mostrar de forma interactiva una descripción compacta y general
de una variable con sus respectivas categorías. Dicho diagrama se puede representar
usando dos diferentes librerías que son \code{Highcharter} y \code{Plotly}, las cuales usan
internamente \code{JavaScript}.
}
\details{
Al usar el paquete \code{Highcharter} y usar las opciones de descarga, el nombre del
archivo descargado será la concatenación del plot graficado y la categoría usada,
así, por ejemplo, si se graficó el diagrama de pie para la categoría "Sexo" el
nombre será \code{PlotTorta_Sexo.png}.
}
\note{
Los gráficos circulares son una forma muy mala de mostrar información. El ojo es
bueno para juzgar medidas lineales y malo para juzgar áreas relativas. Un gráfico
de barras o un gráfico de puntos es una forma preferible de mostrar este tipo de datos.
}
\examples{
ano <- 2020; semestre <- 2
col <- c("#F15A24", "#8CC63F")
Msj <- "Distribuci\u00f3n de estudiantes admitidos en el segundo periodo acad\u00e9mico del 2020."
Plot.Torta(datos      = Consolidado,
           categoria  = "TIPO_NIVEL",
           ano        = ano,
           periodo    = semestre,
           colores    = col,
           titulo     = "DISTRIBUCI\u00d3N DE GRADUADOS POR MODALIDAD DE FORMACI\u00d3N",
           addPeriodo = TRUE,
           libreria   = "highcharter",
           estilo     = list(LegendTitle = "\u00c9sta es una descripci\u00f3n para la leyenda:",
                             hc.Tema = 4, hc.Credits = Msj)
           )
Plot.Torta(datos      = Consolidado,
           categoria  = "TIPO_NIVEL",
           ano        = ano,
           periodo    = semestre,
           colores    = col,
           titulo     = "DISTRIBUCI\u00d3N DE GRADUADOS POR MODALIDAD DE FORMACI\u00d3N",
           addPeriodo = FALSE,
           libreria   = "plotly",
           estilo     = list(ply.Leyenda = "inside",
                             ply.Credits = list(x = 0.62, y = 1.1,
                                                text = paste0("<b>", Msj, "</b>")))
           )

}
