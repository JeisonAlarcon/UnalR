% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Plot_Boxplot.R
\name{Plot.Boxplot}
\alias{Plot.Boxplot}
\title{Cree un diagrama de caja/boxplot dinámico y flexible con dos diferentes paquetes}
\usage{
Plot.Boxplot(
  datos,
  variable,
  grupo1,
  grupo2,
  outliers = TRUE,
  jitter = FALSE,
  violin = FALSE,
  numericalVars,
  ylim,
  colores,
  sizeOutlier = 0,
  colOutlier = "#08306B",
  titulo = "",
  labelX = "Periodo",
  labelY = "",
  textBox = "",
  libreria = c("highcharter", "plotly"),
  estilo = NULL
)
}
\arguments{
\item{datos}{Un data frame, no un vector numérico.}

\item{variable}{Una variable numérica dentro del data frame ingresado en \code{datos}.}

\item{grupo1}{Una variable categórica dentro del data frame ingresado en \code{datos}.}

\item{grupo2}{Otra variable categórica dentro del data frame ingresado en \code{datos}
por si se desea segregar por otra clase el grupo principal.}

\item{outliers}{Si es \code{TRUE} (\emph{valor predeterminado}) se mostrarán los puntos
correspondientes a los datos atípicos, defínalo en \code{FALSE} si desea ocultar
dichos puntos.}

\item{jitter}{Si es \code{TRUE} se agregará las observaciones de cada grupo con un
poco de ruido aleatorio encima de las cajas, útil para mostrar la distribución
subyacente de los datos. El valor por defecto es \code{FALSE}.}

\item{violin}{Si es \code{TRUE} se acompañará el boxplot con su diagrama de densidad,
logrando ser más informativo al mostrar la distribución completa de los datos.
Solo aplica para la librería \code{"plotly"}.}

\item{numericalVars}{Una lista (\emph{ya sea creada con la sintaxis \code{base} o \code{tidy}})
con las variables numéricas dentro del data frame ingresado en \code{datos} con
las que se desea crear un botón dinámico para desplazarse entre ellas fijando
el grupo ingresado en \code{grupo1}.}

\item{ylim}{Vector numérico que especifica el límite inferior y superior,
respectivamente, del eje \code{Y}. Si no se introduce algún valor se mostrará todo
el rango disponible para dicho eje.}

\item{colores}{Cadena de caracteres indicando los colores con los cuales se
deben colorear cada una de las trazas correspondiente a cada nivel del argumento
\code{grupo1}. Si no se introduce algún vector se usará la paleta \code{rainbow} por defecto.}

\item{sizeOutlier}{Valor numérico que indica el tamaño de los puntos considerados
como atípicos, por defecto se tiene un valor específico al que se le sumará
el ingresado acá.}

\item{colOutlier}{Cadena de caracteres indicando el color de los puntos considerados
como atípicos, por defecto se pintarán de un azul rey.}

\item{titulo}{Igual uso que en \code{\link[=Plot.Series]{Plot.Series()}}}

\item{labelX}{Igual uso que en \code{\link[=Plot.Series]{Plot.Series()}}}

\item{labelY}{Igual uso que en \code{\link[=Plot.Series]{Plot.Series()}}}

\item{textBox}{Cadena de caracteres indicando el nombre de la serie numérica
con la que se construye las cajas, necesario únicamente si se especifica
solamente el \code{grupo1}, para el caso en que se tenga dos grupos no tendrá
ningún efecto en el plot.}

\item{libreria}{Igual uso que en \code{\link[=Plot.Torta]{Plot.Torta()}}}

\item{estilo}{Lista compuesta por varios parámetros, los cuales van a ser usados
de acuerdo con la librería especificada para graficar el boxplot y cuyo objetivo
es personalizar pequeños detalles de éste.
\itemize{
\item \code{LegendTitle}, \code{hc.Tema} y \code{hc.Credits}: Igual uso que en \code{\link[=Plot.Series]{Plot.Series()}}
\item \code{ply.Interaction}, \code{ply.LegendPosition} y \code{ply.Credits}: Igual uso que en
\code{\link[=Plot.Series]{Plot.Series()}}
}}
}
\value{
Retorna el boxplot (\emph{objeto widget de HTML}) creado. La clase del objeto retornado
será un "htmlwidget" y dependiendo de la librería usada pertenecerá adicionalmente
a la clase "highchart" o "plotly".
}
\description{
Esta función proporciona excelentes herramientas y opciones para la visualización
de un diagrama de caja y bigotes (\emph{también conocido como boxplot}) dinámico
con el objetivo de representar gráficamente una serie numérica a través de sus
cuantiles. Dicho boxplot se puede representar usando dos diferentes librerías
que son \code{Highcharter} y \code{Plotly}, las cuales usan internamente \code{JavaScript}.
}
\details{
El argumento \code{numericalVars} funciona solamente con la librería \code{"plotly"},
pues la función de crear los botones dinámicos es procedente de dicha librería.
}
\examples{
Txt <- "EVOLUCI\u00d3N DEL PUNTAJE EN EL EXAMEN DE ADMISI\u00d3N"
Msj <- "Aspirantes a pregrado (<i>no se incluye los datos at\u00edpicos</i>)"
if (require("pals")) {
  Plot.Boxplot(
    datos       = ejMiniAspirantesPre,
    variable    = PTOTAL,
    grupo1      = Serie,
    outliers    = FALSE,
    ylim        = c(0, 1000),
    colores     = jet(25),
    sizeOutlier = 1,
    colOutlier  = "#FF3366",
    titulo      = Txt,
    labelY      = "Puntaje",
    textBox     = "Score",
    libreria    = "highcharter",
    estilo      = list(hc.Tema = 2, hc.Credits = Msj)
  )
}

Msj <- "Aspirantes a pregrado (<i>cada periodo se encuentra segregado por el tipo de admisi\u00f3n</i>)"
Plot.Boxplot(
  datos    = ejMiniAspirantesPre,
  variable = PTOTAL,
  grupo1   = Serie,
  grupo2   = TIPO_INS,
  outliers = TRUE,
  ylim     = c(0, 1000),
  colores  = c("#00ABFF", "#F3224B", "#FCD116", "#29DF2C"),
  titulo   = Txt,
  labelY   = "Puntaje",
  libreria = "highcharter",
  estilo   = list(LegendTitle = "Programa:", hc.Tema = 6, hc.Credits = Msj)
)

Plot.Boxplot(
  datos    = iris,
  variable = Sepal.Length,
  grupo1   = Species,
  violin   = TRUE,
  colores  = c("#FF1D58", "#FDB911", "#00E527"),
  titulo   = "BOXPLOT DE LA LONGITUD DEL S\u00c9PALO | IRIS DATASET",
  labelX   = "Especie",
  labelY   = "Longitud del S\u00e9palo",
  libreria = "plotly"
)

Plot.Boxplot(
  datos       = ejMiniAspirantesPre,
  variable    = PTOTAL,
  grupo1      = Serie,
  grupo2      = TIPO_INS,
  jitter      = TRUE,
  ylim        = c(0, 1000),
  colores     = c("#00ABFF", "#F3224B", "#FCD116", "#29DF2C"),
  sizeOutlier = 0,
  colOutlier  = "#D3D3D3",
  titulo      = Txt,
  labelY      = "Puntaje",
  libreria    = "plotly",
  estilo      = list(
    LegendTitle = "Programa:", ply.Interaction = "closest",
    ply.LegendPosition = list(x = 0.16, y = -0.25, orientation = "h"),
    ply.Credits = list(x = 0.4, y = 0.95, text = Msj)
  )
) -> Advertencia
suppressWarnings(print(Advertencia))

if (require("dplyr")) {
  df <- ejSaberPro2020 \%>\%
    select(SEDE_NOMBRE_ADM, PUNTAJE_GLOBAL, PUNT_RAZO_CUANT, PUNT_INGLES,
           PUNT_LECT_CRIT, PUNT_COMP_CIUD, PUNT_COMU_ESCR
           )
  Numericas <- vars(PUNT_RAZO_CUANT, PUNT_INGLES, PUNT_LECT_CRIT, PUNT_COMP_CIUD, PUNT_COMU_ESCR)
# Numericas <- c("PUNT_RAZO_CUANT", "PUNT_INGLES", "PUNT_LECT_CRIT", "PUNT_COMP_CIUD", "PUNT_COMU_ESCR")
}
misColores <- c(
  "#29ABE2", # AZUL CLARO  | Amazonia
  "#8CC63F", # VERDE       | Bogota
  "#CC241D", # ROJO        | Caribe
  "#0071BC", # AZUL VIVO   | Manizales
  "#F15A24", # NARANJA     | Medellin
  "#FBB03B", # AMARILLO    | Orinoquia
  "#93278F", # MORADO      | Palmira
  "#8A381A"  # GRIS        | Tumaco
)

Plot.Boxplot(
  datos         = df,
  variable      = PUNTAJE_GLOBAL,
  grupo1        = SEDE_NOMBRE_ADM,
  numericalVars = Numericas,
  colores       = misColores,
  libreria      = "plotly"
)

}
